<?xml version="1.0" encoding="UTF-8"?>
<!--suppress ALL-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ledao.mapper.BookMapper">
    <resultMap id="BookResult" type="Book">
        <result property="name" column="name"/>
        <result property="bookDescribe" column="bookDescribe"/>
        <result property="bookTypeId" column="bookTypeId"/>
        <result property="bookNumber" column="bookNumber"/>
        <result property="state" column="state"/>
        <result property="location" column="location"/>
        <result property="imageName" column="imageName"/>
    </resultMap>

    <select id="list" parameterType="map" resultMap="BookResult">
        select *
        from t_book
        <where>
            <if test="name != null and name != ''">
                and name like #{name}
            </if>
            <if test="bookTypeId != null">
                and bookTypeId = #{bookTypeId}
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
            <if test="bookNumber != null and bookNumber != ''">
                and bookNumber like #{bookNumber}
            </if>
        </where>
        order by bookNumber asc
        <if test="start != null and size != null">
            limit #{start},#{size}
        </if>
    </select>

    <select id="getCount" parameterType="map" resultType="java.lang.Long">
        select count(*)
        from t_book
        <where>
            <if test="name != null and name != ''">
                and name like #{name}
            </if>
            <if test="bookTypeId != null">
                and bookTypeId = #{bookTypeId}
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
            <if test="bookNumber != null and bookNumber != ''">
                and bookNumber like #{bookNumber}
            </if>
        </where>
    </select>

    <insert id="add">
        insert into t_book (name, bookDescribe, bookTypeId, bookNumber, state, location, imageName)
        values (#{name}, #{bookDescribe}, #{bookTypeId}, #{bookNumber}, 1, #{location}, #{imageName});
    </insert>

    <update id="update">
        update t_book
        <set>
            <if test="name != null and name != ''">
                name=#{name},
            </if>
            <if test="bookDescribe != null and bookDescribe != ''">
                bookDescribe=#{bookDescribe},
            </if>
            <if test="bookTypeId != null">
                bookTypeId=#{bookTypeId},
            </if>
            <if test="bookNumber != null and bookNumber != ''">
                bookNumber=#{bookNumber},
            </if>
            <if test="state != null">
                state=#{state},
            </if>
            <if test="location != null and location != ''">
                location=#{location},
            </if>
            <if test="imageName != null and imageName != ''">
                imageName=#{imageName},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="findById" parameterType="integer" resultType="com.ledao.entity.Book">
        select *
        from t_book
        where id = #{id}
    </select>

    <delete id="deleteById" parameterType="integer">
        delete
        from t_book
        where id = #{id}
    </delete>

    <select id="findByBookNumber" parameterType="string" resultType="com.ledao.entity.Book">
        select *
        from t_book
        where bookNumber = #{bookNumber}
    </select>

    <select id="selectIdByNameLike" parameterType="string" resultType="integer">
        SELECT id
        FROM t_book t
        WHERE t.`name` LIKE #{name};
    </select>

    <select id="getCountByBookTypeId" parameterType="integer" resultType="integer">
        select count(*)
        from t_book
        where bookTypeId = #{bookTypeId}
    </select>

    <select id="findListByName" parameterType="string" resultMap="BookResult">
        select *
        from t_book t
        where t.name = #{name}
    </select>

    <select id="findListByImageName" parameterType="string" resultMap="BookResult">
        select *
        from t_book t
        where t.imageName = #{imageName}
    </select>

    <select id="findAllUseImage" resultType="java.lang.String">
        SELECT DISTINCT imageName FROM t_book;
    </select>
</mapper>